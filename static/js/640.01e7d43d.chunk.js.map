{"version":3,"file":"static/js/640.01e7d43d.chunk.js","mappings":"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","sources":["lib/components/Components/Folder/Folder.jsx","lib/components/Components/SpotlightCard/SpotlightCard.jsx","webpack://kleison/./src/components/Projects.module.css?4411","components/Projects.js"],"sourcesContent":["/*\n\tInstalled from https://reactbits.dev/default/\n*/\n\nimport { useState, useEffect } from \"react\";\nimport \"./Folder.css\";\n\nconst darkenColor = (hex, percent) => {\n  let color = hex.startsWith(\"#\") ? hex.slice(1) : hex;\n  if (color.length === 3) {\n    color = color\n      .split(\"\")\n      .map((c) => c + c)\n      .join(\"\");\n  }\n  const num = parseInt(color, 16);\n  let r = (num >> 16) & 0xff;\n  let g = (num >> 8) & 0xff;\n  let b = num & 0xff;\n  r = Math.max(0, Math.min(255, Math.floor(r * (1 - percent))));\n  g = Math.max(0, Math.min(255, Math.floor(g * (1 - percent))));\n  b = Math.max(0, Math.min(255, Math.floor(b * (1 - percent))));\n  return (\n    \"#\" +\n    ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1).toUpperCase()\n  );\n};\n\nconst Folder = ({\n  color = \"#5227FF\",\n  size = 1,\n  items = [],\n  className = \"\",\n  isOpen: open = false,\n  onClick,\n}) => {\n  const maxItems = 3;\n  const papers = items.slice(0, maxItems);\n  while (papers.length < maxItems) {\n    papers.push(null);\n  }\n\n  const [paperOffsets, setPaperOffsets] = useState(\n    Array.from({ length: maxItems }, () => ({ x: 0, y: 0 }))\n  );\n\n  const folderBackColor = darkenColor(color, 0.08);\n  const paper1 = darkenColor(\"#ffffff\", 0.1);\n  const paper2 = darkenColor(\"#ffffff\", 0.05);\n  const paper3 = \"#ffffff\";\n\n  useEffect(() => {\n    if (!open) {\n      setPaperOffsets(Array.from({ length: maxItems }, () => ({ x: 0, y: 0 })));\n    }\n  }, [open]);\n\n  const handlePaperMouseMove = (\n    e,\n    index\n  ) => {\n    if (!open) return;\n    const rect = e.currentTarget.getBoundingClientRect();\n    const centerX = rect.left + rect.width / 2;\n    const centerY = rect.top + rect.height / 2;\n    const offsetX = (e.clientX - centerX) * 0.15;\n    const offsetY = (e.clientY - centerY) * 0.15;\n    setPaperOffsets((prev) => {\n      const newOffsets = [...prev];\n      newOffsets[index] = { x: offsetX, y: offsetY };\n      return newOffsets;\n    });\n  };\n\n  const handlePaperMouseLeave = (\n    e,\n    index\n  ) => {\n    setPaperOffsets((prev) => {\n      const newOffsets = [...prev];\n      newOffsets[index] = { x: 0, y: 0 };\n      return newOffsets;\n    });\n  };\n\n  const folderStyle = {\n    \"--folder-color\": color,\n    \"--folder-back-color\": folderBackColor,\n    \"--paper-1\": paper1,\n    \"--paper-2\": paper2,\n    \"--paper-3\": paper3,\n  };\n\n  const folderClassName = `folder ${open ? \"open\" : \"\"}`.trim();\n  const scaleStyle = { transform: `scale(${size})` };\n\n  return (\n    <div style={scaleStyle} className={className}>\n      <div\n        className={folderClassName}\n        style={folderStyle}\n        onClick={onClick}\n      >\n        <div className=\"folder__back\">\n          {papers.map((item, i) => (\n            <div\n              key={i}\n              className={`paper paper-${i + 1}`}\n              onMouseMove={(e) => handlePaperMouseMove(e, i)}\n              onMouseLeave={(e) => handlePaperMouseLeave(e, i)}\n              style={\n                open\n                  ? ({\n                    \"--magnet-x\": `${paperOffsets[i]?.x || 0}px`,\n                    \"--magnet-y\": `${paperOffsets[i]?.y || 0}px`,\n                  })\n                  : {}\n              }\n            >\n              {item}\n            </div>\n          ))}\n          <div className=\"folder__front\"></div>\n          <div className=\"folder__front right\"></div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Folder;\n","/*\n\tInstalled from https://reactbits.dev/default/\n*/\n\nimport { useRef } from \"react\";\nimport \"./SpotlightCard.css\";\n\nconst SpotlightCard = ({ children, className = \"\", spotlightColor = \"rgba(255, 255, 255, 0.25)\" }) => {\n  const divRef = useRef(null);\n\n  const handleMouseMove = (e) => {\n    const rect = divRef.current.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n\n    divRef.current.style.setProperty(\"--mouse-x\", `${x}px`);\n    divRef.current.style.setProperty(\"--mouse-y\", `${y}px`);\n    divRef.current.style.setProperty(\"--spotlight-color\", spotlightColor);\n  };\n\n  return (\n    <div\n      ref={divRef}\n      onMouseMove={handleMouseMove}\n      className={`card-spotlight ${className}`}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default SpotlightCard;\n","// extracted by mini-css-extract-plugin\nexport default {\"projectCard\":\"Projects_projectCard__uWirf\",\"folder\":\"Projects_folder__NGOMT\",\"folderLabel\":\"Projects_folderLabel__TbgJt\",\"projectDetails\":\"Projects_projectDetails__Rzhh4\",\"spotlightCard\":\"Projects_spotlightCard__ZHSgQ\",\"projectDescription\":\"Projects_projectDescription__XN7dd\",\"projectLink\":\"Projects_projectLink__rpx9U\",\"projectImage\":\"Projects_projectImage__QoRV9\"};","import React, { useState } from 'react';\r\nimport Folder from '../lib/components/Components/Folder/Folder';\r\nimport SpotlightCard from '../lib/components/Components/SpotlightCard/SpotlightCard';\r\nimport styles from './Projects.module.css';\r\n\r\nconst Projects = ({ project }) => {\r\n  const [isFolderOpen, setIsFolderOpen] = useState(false);\r\n  const [isDetailsVisible, setIsDetailsVisible] = useState(false);\r\n\r\n  // Esta função agora serve para FECHAR tudo\r\n  const handleFolderClick = () => {\r\n    setIsFolderOpen(false);\r\n    setIsDetailsVisible(false);\r\n  };\r\n\r\n  // Esta função lida com o clique em duas etapas na imagem\r\n  const handleImageClick = (e) => {\r\n    e.stopPropagation();\r\n    if (!isFolderOpen) {\r\n      // 1º clique: Abre a pasta\r\n      setIsFolderOpen(true);\r\n    } else {\r\n      // 2º clique: Mostra os detalhes do projeto\r\n      setIsDetailsVisible(true);\r\n    }\r\n  };\r\n\r\n  // Fecha apenas o card de detalhes quando o mouse sai de sua área\r\n  const handleDetailsMouseLeave = () => {\r\n    setIsDetailsVisible(false);\r\n  };\r\n\r\n  // Cria o conteúdo para os \"papéis\" dentro da pasta. Replicamos a imagem\r\n  // para que ela apareça em todos os 3 papéis que o componente Folder renderiza.\r\n  const folderItems = project.imageUrl\r\n    ? Array(3).fill(null).map((_, index) => (\r\n        <img key={index} src={project.imageUrl} alt={`Preview do ${project.title}`} className={styles.projectImage} onClick={handleImageClick}/>\r\n      ))\r\n    : [];\r\n\r\n  return (\r\n    <div className={`${styles.projectCard} cursor-target`}>\r\n      <Folder\r\n        className={styles.folder}\r\n        onClick={handleFolderClick}\r\n        isOpen={isFolderOpen}\r\n        items={folderItems}\r\n        color=\"#00FF7F\" // Define a cor da pasta para combinar com o tema\r\n      />\r\n      {isDetailsVisible && (\r\n        <div className={styles.projectDetails} onMouseLeave={handleDetailsMouseLeave}>\r\n          <SpotlightCard className={styles.spotlightCard}>\r\n            <h3>\r\n              <a href={project.link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                {project.title}\r\n              </a>\r\n            </h3>\r\n            <p className={styles.projectDescription}>{project.description}</p>\r\n            <a href={project.link} target=\"_blank\" rel=\"noopener noreferrer\" className={styles.projectLink}>\r\n              Ver no GitHub\r\n            </a>\r\n          </SpotlightCard>\r\n        </div>\r\n      )}\r\n      {!isFolderOpen && <span className={styles.folderLabel}>{project.title}</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Projects;"],"names":["darkenColor","hex","percent","color","startsWith","slice","length","split","map","c","join","num","parseInt","r","g","b","Math","max","min","floor","toString","toUpperCase","_ref","size","items","className","isOpen","open","onClick","papers","push","paperOffsets","setPaperOffsets","useState","Array","from","x","y","folderBackColor","paper1","paper2","useEffect","folderStyle","folderClassName","trim","scaleStyle","transform","_jsx","style","children","_jsxs","item","i","_paperOffsets$i","_paperOffsets$i2","onMouseMove","e","handlePaperMouseMove","index","rect","currentTarget","getBoundingClientRect","centerX","left","width","centerY","top","height","offsetX","clientX","offsetY","clientY","prev","newOffsets","onMouseLeave","handlePaperMouseLeave","spotlightColor","divRef","useRef","ref","current","setProperty","project","isFolderOpen","setIsFolderOpen","isDetailsVisible","setIsDetailsVisible","handleImageClick","stopPropagation","folderItems","imageUrl","fill","_","src","alt","title","styles","Folder","handleFolderClick","handleDetailsMouseLeave","SpotlightCard","href","link","target","rel","description"],"sourceRoot":""}